import React from 'react'

/**
 * „É≠„Éº„Éá„Ç£„É≥„Ç∞ÁîªÈù¢„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà
 * 
 * Ê©üËÉΩ:
 * - „Ç¢„Éã„É°„Éº„Ç∑„Éß„É≥Ë°®Á§∫
 * - „Ç´„Çπ„Çø„Éû„Ç§„Ç∫ÂèØËÉΩ„Å™„É°„ÉÉ„Çª„Éº„Ç∏
 * - „Ç≠„É£„É≥„Çª„É´„Éú„Çø„É≥Ôºà„Ç™„Éó„Ç∑„Éß„É≥Ôºâ
 * - „É¨„Çπ„Éù„É≥„Ç∑„ÉñÂØæÂøú
 */
const LoadingScreen = ({
  message = '„É≠„Éº„Éâ‰∏≠',
  subMessage = '',
  icon = '‚è≥',
  showCancel = false,
  onCancel,
  progress = null, // 0-100 „ÅÆÈÄ≤ÊçóÂÄ§Ôºà„Ç™„Éó„Ç∑„Éß„É≥Ôºâ
  className = ''
}) => {
  return (
    <div className={`flex items-center justify-center min-h-64 p-4 ${className}`}>
      <div className="text-center max-w-sm mx-auto">
        {/* „Ç¢„Ç§„Ç≥„É≥ */}
        <div className="text-4xl sm:text-6xl mb-4 pulse-animation">
          {icon}
        </div>
        
        {/* „É°„Ç§„É≥„É°„ÉÉ„Çª„Éº„Ç∏ */}
        <div className="text-lg sm:text-xl font-bold text-blue-600 mb-2">
          {message}
          <span className="loading-dots"></span>
        </div>
        
        {/* „Çµ„Éñ„É°„ÉÉ„Çª„Éº„Ç∏ */}
        {subMessage && (
          <div className="text-xs sm:text-sm text-gray-600 mb-4">
            {subMessage}
          </div>
        )}
        
        {/* ÈÄ≤Êçó„Éê„Éº */}
        <div className="w-48 sm:w-64 bg-gray-200 rounded-full h-2 mx-auto mb-4">
          <div 
            className="bg-blue-600 h-2 rounded-full transition-all duration-300"
            style={{ 
              width: progress !== null ? `${progress}%` : '75%',
              animation: progress === null ? 'pulse 2s infinite' : undefined
            }}
          ></div>
        </div>
        
        {/* „Ç≠„É£„É≥„Çª„É´„Éú„Çø„É≥ */}
        {showCancel && onCancel && (
          <button
            onClick={onCancel}
            className="px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors text-sm focus-ring"
            type="button"
          >
            ‚è∏Ô∏è „Ç≠„É£„É≥„Çª„É´
          </button>
        )}
        
        {/* „É≠„Éº„Éá„Ç£„É≥„Ç∞„Çπ„Éî„Éä„ÉºÔºà„Ç¢„ÇØ„Çª„Ç∑„Éì„É™„ÉÜ„Ç£Áî®Ôºâ */}
        <div 
          className="sr-only" 
          role="status" 
          aria-live="polite"
        >
          {message}
        </div>
      </div>
    </div>
  )
}

/**
 * Êï∞Â≠¶ÂïèÈ°åÁîüÊàêÂ∞ÇÁî®„É≠„Éº„Éá„Ç£„É≥„Ç∞
 */
export const MathLoadingScreen = ({ usePool = false, onCancel }) => (
  <LoadingScreen
    message={usePool ? 'ÂïèÈ°å„Éó„Éº„É´„Åã„ÇâÂèñÂæó‰∏≠' : 'AI„ÅåÈ´òÂìÅË≥™„Å™ÂïèÈ°å„ÇíÁîüÊàê‰∏≠'}
    subMessage={usePool ? 'ÂïèÈ°å„Éó„Éº„É´„Åã„ÇâÊúÄÈÅ©„Å™ÂïèÈ°å„ÇíÈÅ∏Êäû„Åó„Å¶„ÅÑ„Åæ„Åô' : '‰ΩìÁ≥ªÊï∞Â≠¶„Å´Ê∫ñÊã†„Åó„ÅüÊÄùËÄÉÂäõÂïèÈ°å„Çí‰ΩúÊàê„Åó„Å¶„ÅÑ„Åæ„Åô'}
    icon={usePool ? 'üìö' : 'ü§ñ'}
    showCancel={true}
    onCancel={onCancel}
  />
)

/**
 * Ëã±Ë™ûÂ≠¶ÁøíÂ∞ÇÁî®„É≠„Éº„Éá„Ç£„É≥„Ç∞
 */
export const EnglishLoadingScreen = ({ onCancel }) => (
  <LoadingScreen
    message="AI„ÅåÊúÄÈÅ©„Å™Ëã±ÂçòË™û„ÇíÁîüÊàê‰∏≠"
    subMessage="Progress 21„Å´Ê∫ñÊã†„Åó„ÅüÂçòË™û„Å®Ë©≥Á¥∞Ëß£Ë™¨„Çí‰ΩúÊàê„Åó„Å¶„ÅÑ„Åæ„Åô"
    icon="üìö"
    showCancel={true}
    onCancel={onCancel}
  />
)

/**
 * ‰∏ÄÊã¨Âá¶ÁêÜÂ∞ÇÁî®„É≠„Éº„Éá„Ç£„É≥„Ç∞
 */
export const BatchLoadingScreen = ({ count, currentIndex, operation = 'Âá¶ÁêÜ', onCancel }) => {
  const progress = count > 0 ? Math.round((currentIndex / count) * 100) : 0
  
  return (
    <LoadingScreen
      message={`${operation}‰∏≠ (${currentIndex}/${count})`}
      subMessage={`${count}‰ª∂„ÅÆ${operation}„ÇíÂÆüË°å„Åó„Å¶„ÅÑ„Åæ„Åô...`}
      icon="üöÄ"
      progress={progress}
      showCancel={true}
      onCancel={onCancel}
    />
  )
}

export default LoadingScreen